# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ResponseEVArchivos(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, status: int=None, elementos: List[str]=None, internal_transaction_id: str=None, external_transaction_id: str=None):  # noqa: E501
        """ResponseEVArchivos - a model defined in Swagger

        :param status: The status of this ResponseEVArchivos.  # noqa: E501
        :type status: int
        :param elementos: The elementos of this ResponseEVArchivos.  # noqa: E501
        :type elementos: List[str]
        :param internal_transaction_id: The internal_transaction_id of this ResponseEVArchivos.  # noqa: E501
        :type internal_transaction_id: str
        :param external_transaction_id: The external_transaction_id of this ResponseEVArchivos.  # noqa: E501
        :type external_transaction_id: str
        """
        self.swagger_types = {
            'status': int,
            'elementos': List[str],
            'internal_transaction_id': str,
            'external_transaction_id': str
        }

        self.attribute_map = {
            'status': 'status',
            'elementos': 'elementos',
            'internal_transaction_id': 'internalTransactionId',
            'external_transaction_id': 'externalTransactionId'
        }
        self._status = status
        self._elementos = elementos
        self._internal_transaction_id = internal_transaction_id
        self._external_transaction_id = external_transaction_id

    @classmethod
    def from_dict(cls, dikt) -> 'ResponseEVArchivos':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Response_EVArchivos of this ResponseEVArchivos.  # noqa: E501
        :rtype: ResponseEVArchivos
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self) -> int:
        """Gets the status of this ResponseEVArchivos.


        :return: The status of this ResponseEVArchivos.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status: int):
        """Sets the status of this ResponseEVArchivos.


        :param status: The status of this ResponseEVArchivos.
        :type status: int
        """

        self._status = status

    @property
    def elementos(self) -> List[str]:
        """Gets the elementos of this ResponseEVArchivos.


        :return: The elementos of this ResponseEVArchivos.
        :rtype: List[str]
        """
        return self._elementos

    @elementos.setter
    def elementos(self, elementos: List[str]):
        """Sets the elementos of this ResponseEVArchivos.


        :param elementos: The elementos of this ResponseEVArchivos.
        :type elementos: List[str]
        """

        self._elementos = elementos

    @property
    def internal_transaction_id(self) -> str:
        """Gets the internal_transaction_id of this ResponseEVArchivos.


        :return: The internal_transaction_id of this ResponseEVArchivos.
        :rtype: str
        """
        return self._internal_transaction_id

    @internal_transaction_id.setter
    def internal_transaction_id(self, internal_transaction_id: str):
        """Sets the internal_transaction_id of this ResponseEVArchivos.


        :param internal_transaction_id: The internal_transaction_id of this ResponseEVArchivos.
        :type internal_transaction_id: str
        """

        self._internal_transaction_id = internal_transaction_id

    @property
    def external_transaction_id(self) -> str:
        """Gets the external_transaction_id of this ResponseEVArchivos.


        :return: The external_transaction_id of this ResponseEVArchivos.
        :rtype: str
        """
        return self._external_transaction_id

    @external_transaction_id.setter
    def external_transaction_id(self, external_transaction_id: str):
        """Sets the external_transaction_id of this ResponseEVArchivos.


        :param external_transaction_id: The external_transaction_id of this ResponseEVArchivos.
        :type external_transaction_id: str
        """

        self._external_transaction_id = external_transaction_id
