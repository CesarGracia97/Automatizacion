# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.campana import Campana  # noqa: F401,E501
from swagger_server import util


class RequestCreateCampana(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, external_transaction_id: str=None, channel: str=None, campana: Campana=None, idproceso: int=None):  # noqa: E501
        """RequestCreateCampana - a model defined in Swagger

        :param external_transaction_id: The external_transaction_id of this RequestCreateCampana.  # noqa: E501
        :type external_transaction_id: str
        :param channel: The channel of this RequestCreateCampana.  # noqa: E501
        :type channel: str
        :param campana: The campana of this RequestCreateCampana.  # noqa: E501
        :type campana: Campana
        :param idproceso: The idproceso of this RequestCreateCampana.  # noqa: E501
        :type idproceso: int
        """
        self.swagger_types = {
            'external_transaction_id': str,
            'channel': str,
            'campana': Campana,
            'idproceso': int
        }

        self.attribute_map = {
            'external_transaction_id': 'externalTransactionId',
            'channel': 'channel',
            'campana': 'campana',
            'idproceso': 'idproceso'
        }
        self._external_transaction_id = external_transaction_id
        self._channel = channel
        self._campana = campana
        self._idproceso = idproceso

    @classmethod
    def from_dict(cls, dikt) -> 'RequestCreateCampana':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RequestCreateCampana of this RequestCreateCampana.  # noqa: E501
        :rtype: RequestCreateCampana
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_transaction_id(self) -> str:
        """Gets the external_transaction_id of this RequestCreateCampana.


        :return: The external_transaction_id of this RequestCreateCampana.
        :rtype: str
        """
        return self._external_transaction_id

    @external_transaction_id.setter
    def external_transaction_id(self, external_transaction_id: str):
        """Sets the external_transaction_id of this RequestCreateCampana.


        :param external_transaction_id: The external_transaction_id of this RequestCreateCampana.
        :type external_transaction_id: str
        """
        if external_transaction_id is None:
            raise ValueError("Invalid value for `external_transaction_id`, must not be `None`")  # noqa: E501

        self._external_transaction_id = external_transaction_id

    @property
    def channel(self) -> str:
        """Gets the channel of this RequestCreateCampana.


        :return: The channel of this RequestCreateCampana.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel: str):
        """Sets the channel of this RequestCreateCampana.


        :param channel: The channel of this RequestCreateCampana.
        :type channel: str
        """
        if channel is None:
            raise ValueError("Invalid value for `channel`, must not be `None`")  # noqa: E501

        self._channel = channel

    @property
    def campana(self) -> Campana:
        """Gets the campana of this RequestCreateCampana.


        :return: The campana of this RequestCreateCampana.
        :rtype: Campana
        """
        return self._campana

    @campana.setter
    def campana(self, campana: Campana):
        """Sets the campana of this RequestCreateCampana.


        :param campana: The campana of this RequestCreateCampana.
        :type campana: Campana
        """
        if campana is None:
            raise ValueError("Invalid value for `campana`, must not be `None`")  # noqa: E501

        self._campana = campana

    @property
    def idproceso(self) -> int:
        """Gets the idproceso of this RequestCreateCampana.


        :return: The idproceso of this RequestCreateCampana.
        :rtype: int
        """
        return self._idproceso

    @idproceso.setter
    def idproceso(self, idproceso: int):
        """Sets the idproceso of this RequestCreateCampana.


        :param idproceso: The idproceso of this RequestCreateCampana.
        :type idproceso: int
        """
        if idproceso is None:
            raise ValueError("Invalid value for `idproceso`, must not be `None`")  # noqa: E501

        self._idproceso = idproceso
